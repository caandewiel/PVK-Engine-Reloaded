name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Adapted from https://github.com/inexorgame/vulkan-renderer/blob/master/.github/workflows/build.yml

env:
  BUILD_TYPE: Release
  pvk_reloaded_build_type: "Release"
  pvk_reloaded_vulkan_version: "1.2.170.0"
  pvk_reloaded_vulkan_sdk: "$GITHUB_WORKSPACE/../vulkan_sdk/"

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container: ubuntu:rolling
    env:
      DEBIAN_FRONTEND: "noninteractive"

    steps:
    - name: Install necessary packages
      shell: bash
      run: |
        # Update package lists
        apt update -qq
        # Install build tools
        apt install -y \
          clang \
          cmake \
          curl \
          git \
          lld \
          ninja-build \
          pkg-config \
          python3 \
          python3-pip \
          xkb-data \
          xorg-dev
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Checkout submodules
      uses: textbook/git-checkout-submodule-action@2.1.1

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        export CC=clang
        export CXX=clang++
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target pvk_reloaded_asset_manager
