name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Adapted from https://github.com/inexorgame/vulkan-renderer/blob/master/.github/workflows/build.yml

env:
  pvk_reloaded_build_type: "Release"
  pvk_reloaded_vulkan_version: "1.2.131.1"
  pvk_reloaded_vulkan_sdk: "$GITHUB_WORKSPACE/../vulkan_sdk/"

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install necessary packages
      shell: bash
      run: |
        # Update package lists
        apt update -qq
        # Install build tools
        apt install -y \
          clang \
          cmake \
          curl \
          git \
          pkg-config

    - name: Install Vulkan SDK
      shell: bash
      run: |
        # Download Vulkan SDK
        curl -LS -o vulkansdk.tar.gz \
          https://sdk.lunarg.com/sdk/download/${{ env.pvk_reloaded_vulkan_version }}/linux/vulkansdk-linux-x86_64-${{ env.pvk_reloaded_vulkan_version }}.tar.gz
        # Create Vulkan SDK directory and extract
        mkdir "${{ env.pvk_reloaded_vulkan_sdk }}"
        tar xfz vulkansdk.tar.gz -C "${{ env.pvk_reloaded_vulkan_sdk }}"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
